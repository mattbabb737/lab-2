---
title: "Lab 2"
name: Matt Babb
subtitle: "Advanced Data Visualization"
editor: source
embed-resources: true
echo: false
warning: false
error: false

---

# Instructions

**Create a Quarto file for ALL Lab 2 (no separate files for Parts 1 and 2).**

- Make sure your final file is carefully formatted, so that each analysis is
clear and concise.
- Be sure your knitted `.html` file shows **all** your source code, including
any function definitions. 

# Part One: Identifying Bad Visualizations

If you happen to be bored and looking for a sensible chuckle, you should check
out these [Bad Visualisations](https://badvisualisations.tumblr.com/). Looking through these is also a good exercise in cataloging what makes a visualization
good or bad. 

## Dissecting a Bad Visualization

Below is an example of a less-than-ideal visualization from the collection
linked above. It comes to us from data provided for the [Wellcome Global Monitor 2018 report](https://wellcome.ac.uk/reports/wellcome-global-monitor/2018) by the 
Gallup World Poll:

![](https://atheobold.github.io/stat-541-website/labs/images/bad-wellcome-graph.jpg)

1. While there are certainly issues with this image, do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?

It appears that this image is trying to represent the proportions of people in each country that answered affirmatively to the statement "Vaccines are safe". That data come from the year 2018, and are grouped by global region. We can see that the median affirmative answer in each global region increases from the bottom of the plot to the top.
  

2. List the variables that appear to be displayed in this visualization. 
*Hint: Variables refer to columns in the data.*

Variables include:

- Percentage of people who believe that vaccines are safe
- Global region
- Region medians
- Countries


3. Now that you're versed in the grammar of graphics (e.g., `ggplot`), list the *aesthetics* used and which *variables* are mapped to each.

The aesthetics map to variables in the following ways:

- `x` is mapped to proportion of the population that believes that vaccines are safe
- `y` is mapped to...nothing?
- `color` is mapped to goblal region
- `label` is mapped individual country names
- Each point represents the proportion of a country's pro-vacc'ers, and is drawn with `geom_point()`  
- Vertical lines are added using `geom_vline()` to show regional medians, which increase as one looks higher in the plot

4. What type of graph would you call this? Meaning, what `geom` would you use
to produce this plot?

This appears to be a scatterplot that also creates a quasi-faceting effect by grouping countries based on region, and then separating them vertically depending on the median proportion of belief in vaccine health in each global region. I would use `geom_point()` to create this plot.


5. Provide at least four problems or changes that would improve this graph. 
*Please format your changes as bullet points!*

Four ways to improve this plot are:

- Eliminate the legend
- Double-code the points to further distinguish them beyond color
- Eliminate the appearance of the y-axis in each facet representing something quantitative
- Make points clickable so that one can see proportions for individual countries

## Improving the Bad Visualization

The data for the Wellcome Global Monitor 2018 report can be downloaded at the following site: [https://wellcome.ac.uk/reports/wellcome-global-monitor/2018](https://wellcome.org/sites/default/files/wgm2018-dataset-crosstabs-all-countries.xlsx)

<!-- at the "Dataset and crosstabs for all countries" link on the right side of the page-->

There are two worksheets in the downloaded dataset file. You may need to read
them in separately, but you may also just use one if it suffices.

```{r}
#| label: read-in-wellcome-data

library(readxl)
library(tidyverse)

wgm_raw <- read_excel("wgm2018-dataset-crosstabs-all-countries.xlsx", skip = 2)

wgm_clean <- wgm_raw %>%
  tidyr::fill(Question) 

region_map <- list(
  "Asia" = c("Afghanistan", "Bangladesh", "India", "Iran", "Nepal", "Pakistan", "Sri Lanka",
             "Cambodia", "Indonesia", "Laos", "Malaysia", "Myanmar", "Philippines", "Singapore",
             "Thailand", "Vietnam", "China", "Japan", "Mongolia", "South Korea", "Taiwan"),
  "Middle East and North Africa" = c("Algeria", "Egypt", "Libya", "Morocco", "Tunisia", "Iraq",
             "Israel", "Jordan", "Kuwait", "Lebanon", "Palestinian Territories", "Saudi Arabia",
             "Turkey", "United Arab Emirates", "Yemen"),
  "Sub-Saharan Africa" = c("Burundi", "Comoros", "Ethiopia", "Kenya", "Madagascar", "Malawi", 
             "Mauritius", "Mozambique", "Rwanda", "Tanzania", "Uganda", "Zambia", "Zimbabwe",
             "Benin", "Burkina Faso", "Ghana", "Guinea", "Ivory Coast", "Liberia", "Mali", 
             "Mauritania", "Niger", "Nigeria", "Senegal", "Sierra Leone", "The Gambia", "Togo",
             "Botswana", "Namibia", "South Africa", "Eswatini", "Cameroon", "Chad", 
             "Republic of the Congo", "Gabon"),
  "Americas" = c("Costa Rica", "Dominican Republic", "El Salvador", "Guatemala", "Haiti", 
             "Honduras", "Mexico", "Nicaragua", "Panama", "Argentina", "Bolivia", "Brazil", 
             "Chile", "Colombia", "Ecuador", "Paraguay", "Peru", "Uruguay", "Venezuela", 
             "Canada", "United States"),
  "Europe" = c("Denmark", "Estonia", "Finland", "Iceland", "Ireland", "Latvia", "Lithuania", 
             "Norway", "Sweden", "United Kingdom", "Albania", "Bosnia and Herzegovina", 
             "Croatia", "Cyprus", "Greece", "Italy", "Malta", "North Macedonia", "Montenegro", 
             "Portugal", "Serbia", "Slovenia", "Spain", "Austria", "Belgium", "France", 
             "Germany", "Luxembourg", "Netherlands", "Switzerland"),
  "Former Soviet Union" = c("Armenia", "Azerbaijan", "Georgia", "Kazakhstan", "Kyrgyzstan", 
             "Tajikistan", "Turkmenistan", "Uzbekistan", "Belarus", "Bulgaria", 
             "Czech Republic", "Hungary", "Moldova", "Poland", "Romania", "Russia", 
             "Slovakia", "Ukraine")
)
```

6. Improve the visualization above by either re-creating it with the issues you
identified fixed OR by creating a new visualization that you believe tells the
same story better.

```{r fig.width=12, fig.height=40}
#| label: new-and-improved-visualization

library(plotly)

wgm_agree <- wgm_clean %>%
  filter(
    Question == "Q25 Do you strongly or somewhat agree, strongly or somewhat disagree or neither agree nor disagree with the following statement? Vaccines are safe.",
    Response %in% c("Strongly agree", "Somewhat agree")
  ) %>%
  group_by(Country) %>%
  summarise(
    percent_agree = sum(`Column N %...4`, na.rm = TRUE)
  ) %>%
  arrange(desc(percent_agree))

country_to_region <- unlist(lapply(names(region_map), function(region) {
  setNames(rep(region, length(region_map[[region]])), region_map[[region]])
}))

wgm_agree <- wgm_agree %>%
  mutate(Region = country_to_region[Country],
         Region = ifelse(is.na(Region), "Other/Unclassified", Region))

```

```{r}
library(plotly)
library(ggplot2)
library(dplyr)
library(forcats)
library(ggridges)
library(crosstalk)
library(bslib)
library(htmltools)  # Needed for `browsable()` and `tagList()`

wgm_agree_filtered <- wgm_agree %>%
  filter(Region != "Unclassified") %>%
  mutate(Region = fct_reorder(Region, percent_agree, .fun = median))


shared_data <- SharedData$new(wgm_agree_filtered)


# Base plot
p <- ggplot(shared_data, aes(x = percent_agree, y = Region, fill = Region)) +
  geom_density_ridges(scale = 1.2, alpha = 0.6, color = "white") +
  geom_point(
    aes(text = paste("Country:", Country, "<br>Score:", round(percent_agree * 100, 1), "%")),
    position = position_jitter(height = 0.1),
    size = 2,
    color = "black"
  ) +
  scale_x_continuous(
    limits = c(0.2, 1.0),
    labels = scales::percent_format(accuracy = 1)
  ) +
  labs(
    x = "Agreement",
    y = NULL
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    legend.position = "none"
  )


# Interactive plot
plotly_obj <- ggplotly(p, tooltip = "text") %>%
  layout(
    title = list(
      text = "<b>Belief that Vaccines are Safe by Region</b>",
      x = 0,
      xanchor = "left",
      y = 0.95,
      yanchor = "top",
      font = list(size = 20, family = "Arial", color = "black")
    )
  )


# Combine search bar and plot (stacked vertically)
browsable(
  tagList(
    filter_select(id = "country", label = "Select Country", sharedData = shared_data, group = ~Country),
    plotly_obj
  )
)
```


# Part Two: Broad Visualization Improvement

The full Wellcome Global Monitor 2018 report can be found here: [https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf](https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf). 
Surprisingly, the visualization above does not appear in the report despite the
citation in the bottom corner of the image!

## Second Data Visualization Improvement

**For this second plot, you must select a plot that uses maps so you can demonstrate your proficiency with the `leaflet` package!**

7. Select a data visualization in the report that you think could be improved. 
Be sure to cite both the page number and figure title. Do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?



8. List the variables that appear to be displayed in this visualization.



9. Now that you're versed in the grammar of graphics (ggplot), list the
aesthetics used and which variables are specified for each.



10. What type of graph would you call this?



11. List all of the problems or things you would improve about this graph.  

12. Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.

```{r}
#| label: second-improved-visualization

library(dplyr)
library(tidyr)

library(dplyr)
library(tidyr)

# Pull just Q19 responses
q19_overall <- wgm_clean %>%
  filter(Question == "Q19 Overall, do you think that science and technology will increase or decrease the number of jobs in your local area in the next five years?") %>%
  select(Country, Response, OverallPercent = `Column N %...4`) %>%
  distinct() %>%  # One row per Country x Response
  pivot_wider(names_from = Response, values_from = OverallPercent)

q19_final <- q19_overall %>%
  select(Country = 1, Increase = 2, Decrease = 3) %>%
  mutate(Total = Increase - Decrease)
```

## Third Data Visualization Improvement

**For this third plot, you must use one of the other `ggplot2` extension packages mentioned this week (e.g., `gganimate`, `plotly`, `patchwork`, `cowplot`).**
 
13. Select a data visualization in the report that you think could be improved. 
Be sure to cite both the page number and figure title. Do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?



14. List the variables that appear to be displayed in this visualization.



15. Now that you're versed in the grammar of graphics (ggplot), list the
aesthetics used and which variables are specified for each.



16. What type of graph would you call this?



17. List all of the problems or things you would improve about this graph.  

18. Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.

```{r}
#| label: third-improved-visualization


```
